{
    "collab_server" : "",
    "contents" : "\nlibrary(lubridate)\n#library(graphics)\nSys.setenv(TZ='UTC')\n\n\nwt <- read.csv(\"wtime-output-basic.csv\",stringsAsFactors = FALSE)\nwt <- read.csv(\"wtime-output.csv\",stringsAsFactors = FALSE)\nt<-ymd_hms(wt$time)\nts <- xts(wt$delay,as.POSIXct(t))\nlength(ts[ts>300])\nplot(ts[ts>300],major.format=\"%d %b\",las=2,type=\"p\")\nmean(wt$delay)\n\nday<-apply.daily(prob,mean)\nprob_day <- day[day>900] #days[wait time > 15 min]\nplot(prob_day,type=\"p\")\nlength(prob_day)\n\nwt[wt$delay>900,]\n\nwt[wt$delay>600,]\n\nx<-apply.daily(ts,mean)\nlength(x)\n\nprob<- ts[ts>120]\nlength(prob)\n\nday<-apply.daily(prob,mean)\n\nday[day>600] # only 2\nhist(day[day<600])\nprob_day <- day[day>300] #days[wait time > 15 min]\nlength(prob_day)\nplot(prob_day,type=\"p\")\n\n#2016-02-24 --- here, it is crazy (only this)\nts[ts>2000]\n\n\n#day sum?\nday<-apply.daily(prob,sum)\n\n#hour mean?\nh<-period.apply(ts, endpoints(ts, \"hours\"), mean)\nhead(h[h>100])\n\nh[h>240]\n\nh<-period.apply(ts, endpoints(ts, \"hours\"), mean)\nplot(h[\"2016-02-24 15:00:00/2016-02-25 02:00:00\"])\ndow<-split.default(h, format(index(h), \"%a\"))\n\n#another extreme: 2016-01-12\nplot(h[\"2016-01-12 18:00:00/2016-01-12 23:59:00\"])\n\n\ndowAgg <- lapply(dow,function(x) aggregate(x, format(index(x), \"%H\"), mean))  \ndowSum <- do.call(merge, dowAgg)[,c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\"Sun\")]\n#index(dowSum) <- as.POSIXct(index(dowSum), format=\"%HH\")\nplot(dowSum, type=\"l\", nc=1, ylim=range(dowSum), main=\"Average daily calls\", \n     las=1,col = c(rep(\"blue\",5),rep(\"navy\",2)))\nboxplot(coredata(dowSum),ylab=\"#Calls in a day\",col=\"gray\",at=c(1,2,3,4,5,7,8),\n        yaxt=\"n\")\naxis(2, at = seq(150, 300, by = 10), las=2)\nView(dowAgg[6]$Tue)\n\nplot(dowAgg[6]$Tue,type=\"p\",xaxt=\"n\")\naxis(1, at = seq(0, 23, by = 1), las=1)\n#10 & 11 Tue is crazy\n\ntue10_11 <-dow[6]$Tue[\"T09:00/T18:00\"]\nplot(tue10_11,type=\"p\")\nView(tue10_11)\n\nboxplot(coredata(ts[ts>60]))\nsummary(coredata(prob))\nplot(ts[ts>1200])\nprob\n\nt<-ymd_hms(dt$timeStamp)\nts <- xts(rep.int(1,length(t)),as.POSIXct(t))\nh<-period.apply(ts, endpoints(ts, \"hours\"), sum)\nplot(h[\"2016-02-24 15:00:00/2016-02-25 02:00:00\"])\n\nvehicle<-dt %>%  filter(str_detect(title, 'VEHICLE'))\nhead(vehicle)\nt<-ymd_hms(vehicle$timeStamp)\nts <- xts(rep.int(1,length(t)),as.POSIXct(t))\nh<-period.apply(ts, endpoints(ts, \"hours\"), sum)\nplot(h[\"2016-02-22 15:00:00/2016-02-27 02:00:00\"])\n\n\nvehicle<-dt %>%  filter(str_detect(title, 'OBSTRUCTION'))\nhead(vehicle)\nt<-ymd_hms(vehicle$timeStamp)\nts <- xts(rep.int(1,length(t)),as.POSIXct(t))\nh<-period.apply(ts, endpoints(ts, \"hours\"), sum)\nplot(h[\"2016-02-22 15:00:00/2016-02-27 02:00:00\"])\nplot(h[\"2016-01-22 15:00:00/2016-08-27 02:00:00\"])\n\n#extrems\nh[h>15]\n\n#another extreme: 2016-01-12\nplot(h[\"2016-01-12 10:00:00/2016-01-12 22:00:00\"])\n\nplot(h[\"2016-06-08 10:00:00/2016-06-08 20:00:00\"])\nplot(h[\"2016-02-24 10:00:00/2016-02-25 03:00:00\"])\nplot(h[\"2016-01-12 10:00:00/2016-01-12 23:00:00\"])\nplot(h[\"2017-04-30 00:00:00/2017-04-30 23:00:00\"])\nplot(h[\"2016-07-13 00:00:00/2016-07-13 23:00:00\"])\n\n\n#filter out feb data\nfeb<-dt[dt$time > as.POSIXct(\"2016-02-24 19:30:00\") & dt$time < as.POSIXct(\"2016-02-24 23:59:00\"),]\nfeb$lat <- NULL\nfeb$lng <- NULL\nfeb$desc <- NULL\nfeb$twp <- NULL\nfeb$e <- NULL\nwrite.csv(feb,\"feb.csv\",row.names = FALSE)\n\n#filter out jun 8 data\nfeb<-dt[dt$time > as.POSIXct(\"2016-06-08 10:00:00\") & dt$time < as.POSIXct(\"2016-06-08 20:00:00\"),]\nfeb$lat <- NULL\nfeb$lng <- NULL\nfeb$desc <- NULL\nfeb$twp <- NULL\nfeb$e <- NULL\nwrite.csv(feb,\"jun.csv\",row.names = FALSE)\n\n\n#find extreme dates (all calls)\nvehicle<-dt\nhead(vehicle)\nt<-ymd_hms(vehicle$timeStamp)\nts <- xts(rep.int(1,length(t)),as.POSIXct(t))\nh<-period.apply(ts, endpoints(ts, \"hours\"), sum)\n\n#extrems\nh[h>60]\n\n# calls for extreme days\ndt <- read.csv(\"tz.csv\",stringsAsFactors = FALSE)\nt<-ymd_hms(dt$timeStamp)\nts <- xts(rep.int(1,length(t)),as.POSIXct(t))\nh<-period.apply(ts, endpoints(ts, \"hours\"), sum)\n\nplot(h[\"2016-06-08 10:00:00/2016-06-08 20:00:00\"])\nplot(h[\"2016-02-24 10:00:00/2016-02-25 03:00:00\"])\nplot(h[\"2016-01-12 10:00:00/2016-01-12 23:00:00\"])\nplot(h[\"2017-04-30 00:00:00/2017-04-30 23:00:00\"])\nplot(h[\"2016-07-13 00:00:00/2016-07-13 23:00:00\"])\n\n\nwe <- read.csv(\"weather-raw.csv\",stringsAsFactors = FALSE)\nwe$date<-as.Date(we$date,\"%b %d, %Y\")\ncodes<-str_split_fixed(we$code, \"-\", 4)\nwe$severity<-codes[,1]\nwe$tornado<-substring(codes[,2],2)\nwe$wind<-substring(codes[,3],2)\nwe$hail<-substring(codes[,4],2)\nas.data.frame(unlist(lapply(we$states,function(x) length(unlist(strsplit(x,\",\"))))))\nwe$state_count<-as.data.frame(unlist(lapply(we$states,function(x) length(unlist(strsplit(x,\",\"))))))[,1]\nwe$nj<-as.data.frame(grepl(\"NJ\",we$states))[,1]\nwe$pa<-as.data.frame(grepl(\"PA\",we$states))[,1]\nwe$year<-as.data.frame(format(we$date,\"%Y\"))[,1]\nwe$month<-as.data.frame(format(we$date,\"%m\"))[,1]\nwe$day<-as.data.frame(format(we$date,\"%d\"))[,1]\n\nwrite.csv(we,\"weather.csv\",row.names = FALSE)\n\n#join data\ndt <- read.csv(\"tz.csv\",stringsAsFactors = FALSE)\nt<-ymd_hms(dt$timeStamp)\nts <- xts(rep.int(1,length(t)),as.POSIXct(t))\ndaily<-apply.daily(ts,sum)\ndaily[c(head(we$date))]\nwe$calls<-as.data.frame(unlist(sapply(we$date,function(x) daily[as.character(x)])))[,1]\nView(we)\nwe$date<-NULL\nwe$code<-NULL\nwe$states<-NULL\nwe$severity<-as.data.frame(unlist(sapply(we$severity, switch, \"ENH\" = 4, \"HIGH\" = 6, \"MDT\" = 5, \n                                         \"MRGL\" = 2, \"SLGT\" = 3, \"TSTM\" = 1, USE.NAMES = F)))[,1]\nView(we)\n\nwrite.csv(we,\"weather_calls.csv\",row.names = FALSE)\n\n",
    "created" : 1498394126512.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2398424674",
    "id" : "1024B6CA",
    "lastKnownWriteTime" : 1498507078,
    "last_content_update" : 1498507078384,
    "path" : "W:/Code/GoodAI/callcenter_r/waittime.R",
    "project_path" : "waittime.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}